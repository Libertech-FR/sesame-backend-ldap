#!/bin/perl -n
use JSON;
use Net::LDAP;
BEGIN: {
    # Lecture du fichier de configuration etc/config.conf
    sub readConfig()
    {
        my $self=shift;
        my $path = Cwd::cwd();
        $ok=open(CONF,"$path/../etc/config.conf");
        if ( $ok != 1 )
        {
            print returnCode(1,"Fichier etc/config non trouvé");
            exit(1);
        }
        %param=();
        #lecture du fichier de conf et transformation en un tableau de parametres
        while(<CONF>)
        {
            if (/^([A-Z,a-z,0-1,-,_,\.]+)=(.+)/)
            {
                $value=$2;
                chomp($value);
                $param{$1}=$value;
            }
        }
        close(CONF);
        return %param
    }
    sub returnCode {
        my $code = shift;
        my $message = shift;
        %json = {};
        if ($code > 0) {
            $json->{'status'} = 1;
            $json->{'message'} = "Error Ldap:" . $code . " " . $message;
        }
        else {
            $json->{'status'} = 0;
            $json->{'message'} = "Ldap:" . $code . " " . $message;
        }

        return encode_json($json);
    }
}
my $params = decode_json($_);
$uid = $params->{'uid'};
$oldPassword = $params->{'oldPassword'};
$newPassword = $params->{'newPassword'};
#connection 
%p = readConfig();
# est ce que ce backend est concerné ?
if( index($p{'backendFor'},$attrs->{$p{'branchAttr'}}) == -1){
        print returnCode(O,"Nothing to do");
        exit 0;
}

#Ouverture de la connexion LDAP
$ldap = Net::LDAP->new($p{'host'});
#bind 
my $mesg = $ldap->bind($p{'dn'}, password => $p{'password'});
if ($mesg->code() > 0) {
    print returnCode($mesg->code(),$mesg->error());
    exit 1;
}
#recherche si l uid existe et sont dn 
my $mesg = $ldap->search(base => $p{'base'}, scope => 2, filter => "mail=$uid");
if ($mesg->count == 0) {
    print returnCode(2,"Uid non trouvé");
    exit 1;
}
my $myDn = $mesg->entry(0)->dn();
#rebind du dn pour verifier son mdp 
my $mesg = $ldap->bind($myDn, password => $oldPassword);
if ($mesg->code() > 0) {
    print returnCode($mesg->code(),$mesg->error());
    exit 1;
}
#Ok la connexion est bonne on change le mot de passe
my $mesg = $ldap->search(base => $myDn, scope => 0, filter => "objectclass=*");
$entry = $mesg->entry(0);
$entry->replace("userPassword" => $newPassword);
$mesg = $entry->update($ldap);
if ($mesg->{resultCode} > 0) {
    print returnCode($mesg->code(),$mesg->error());
    exit 1;
}
print returnCode(0,"OK");
exit 0;
