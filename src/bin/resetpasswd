#!/bin/perl -n
use JSON;
use Net::LDAP;
use utf8;
use Cwd qw();
use File::Basename;
BEGIN: {
sub readConfig()
        {
                my $self=shift;
                my $path = dirname(__FILE__);
                $ok=open(CONF,"$path/../etc/config.conf");
                if ( $ok != 1 )
                {
                        print returnCode(1,"Fichier $path/../etc/config.conf non trouv√©");
                        exit(1);
                }
                %param=();
                #lecture du fichier de conf et transformation en un tableau de parametres
                while(<CONF>)
                {
                        if (/^([A-Z,a-z,0-1,-,_,\.]+)=(.+)/)
                        {
                                $value=$2;
                                chomp($value);
                                $param{$1}=$value;
                        }
                }
                close(CONF);
                return %param
        }
        sub returnCode{
                my $code=shift;
                my $message=shift;
                %json={};
                if ($code > 0){
                        $json->{'status'}=1;
                        $json->{'message'}="Error Ldap:".$code." ".$message;
                }else{
                        $json->{'status'}=0;
                        $json->{'message'}="Ldap:".$code." ".$message;
                }

                return encode_json($json);
        }
}
my $params=decode_json($_);
$uid=$params->{'payload'}->{'uid'};
$newPassword=$params->{'payload'}->{'newPassword'};
#connection 
%p=readConfig();

#Ouverture de la connexion LDAP
$ldap=Net::LDAP->new($p{'host'});
#bind 
my $mesg=$ldap->bind($p{'dn'},password =>$p{'password'});
if ($mesg->code() > 0)
{
        print STDERR "erreur connexion";
        exit 1;
}
#recherche si l uid existe et sont dn 
my $mesg=$ldap->search(base =>$p{'base'},scope=>2,filter=>"uid=$uid");
if ($mesg->count == 0)
{
        print returnCode($mesg->code(),$mesg->error());
        exit 1;
}
$entry=$mesg->entry(0);
$entry->replace("userPassword" => $newPassword);
$mesg=$entry->update($ldap);
if ($mesg->{resultCode} > 0)
{
     print returnCode($mesg->code(),$mesg->error());
     exit 1
}
print returnCode(0,"Password changed");
exit 0;
